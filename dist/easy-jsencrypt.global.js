!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("js-base64"),require("jsencrypt")):"function"==typeof define&&define.amd?define(["js-base64","jsencrypt"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).EasyEncrypt=t(e.Base64,e.JSEncrypt)}(this,(function(e,t){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=r(e),c=r(t);const o=function(){const e=["MFwwDQYJKoZIhvc","NAQEBBQADSwAwSA","JBALiqyanDVK5rZEd","Bzr/qYQ0ZBmhPI/wv","VDkbG4xbK0cuOlGMKUst","e9mNNS46LJjw7avytGUbAl6","kWn5G7rSuhf8CAwEAAQ=="].join(""),t=new Array(5).fill("-").join(""),r=[[" ","N","I","G","E","B"],[" ","D","N","E"]],n=[[" ","TE","A","IV","PR","A ","S","R"],[" ","IC","BL","PU"]],c=["Y","E","K"].reverse().join(""),o=r[0].reverse().join(""),s=r[1].reverse().join(""),i=n[1].reverse().join("")+c,b=n[0].reverse().join("")+c,u=[`${t}${o}${i}${t}`,`${t}${o}${b}${t}`,`${t}${s}${i}${t}`,`${t}${s}${b}${t}`],a=["Jjw7avytGUbAl6kWn5G7rSuhf8CAwEAAQJAVQ894nc5izmmL/hM7jNcTrcnL2a8sY1vYvpsfwMDd","mlNfmCMpXEe5KEtMaJbnsh0nwgX5IJAiEAhEbF7Wqbbvsw3HvmEUunFxbDErK2v+39Kv9oCl9ZYJE","zOWDnK1JwwrDBolAiEAyrx7HaZ9KOTwMVAMVxV1mWVDcfo2ncuV0nqhRh1uHFMCIHSKTgw73kiNiV"],f=["T46DciFA3Fe6D+80cj2IgXP4cKQby0ufmrKZaSGEoUp2QIhAOkvBlHExo6PO3jeV48D/J+PlmJzU","CIB2BRc81QXbVnSo/FiNf1vIogSqKsymkrZVtXs7CsTmX","MIIBOgIBAAJBALiqyanDVK5rZEdBzr/qYQ0ZBmhPI/wvVDkbG4xbK0cuOlGMKUste9mNNS46L"];return{z:`${u[0]}${e}${u[2]}`,x:`${u[1]}${f[2]+a[0]+f[0]+a[2]+a[1]+f[1]}${u[3]}`}}();class s{constructor(){this.p="$ENCRYPT_EASY",this.e=new c.default,this.e.setPublicKey(s.$v_b),this.e.setPrivateKey(s.$v_p)}static $v_b=o.z;static $v_p=o.x;be(e){return n.default.Base64.encode(this.p+e)}encrypt(e){const t=Object.prototype.toString.call(e);if("[object String]"===t){const t=this.e.encrypt(e);return this.be(t)}if("[object Object]"===t){let t={};return Object.keys(e).forEach((r=>{t[r]=this.be(this.e.encrypt(e[r]))})),t}throw Error("Object to be encrypted must be String or Object.")}decrypt(e,t){const r=Object.prototype.toString.call(e);if("[object String]"===r){const t=n.default.Base64.decode(e).replace(this.p,"");return this.e.decrypt(t)}if("[object Object]"===r){let r={};return(t&&t.length>0?t:Object.keys(e)).forEach((t=>{if(e[t]){const c=n.default.Base64.decode(e[t]).replace(this.p,"");r[t]=this.e.decrypt(c)}})),r}throw Error("Cryptographic object must be String or Object.")}}return s}));
