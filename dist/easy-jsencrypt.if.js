var EasyEncrypt=function(t,e,r){"use strict";function c(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=c(e),o=c(r);const s=Symbol("random"),i=function(){const t=["MFwwDQYJKoZIhvc","NAQEBBQADSwAwSA","JBALiqyanDVK5rZEd","Bzr/qYQ0ZBmhPI/wv","VDkbG4xbK0cuOlGMKUst","e9mNNS46LJjw7avytGUbAl6","kWn5G7rSuhf8CAwEAAQ=="].join(""),e=new Array(5).fill("-").join(""),r=[[" ","N","I","G","E","B"],[" ","D","N","E"]],c=[[" ","TE","A","IV","PR","A ","S","R"],[" ","IC","BL","PU"]],n=["Y","E","K"].reverse().join(""),o=r[0].reverse().join(""),s=r[1].reverse().join(""),i=c[1].reverse().join("")+n,a=c[0].reverse().join("")+n,b=[`${e}${o}${i}${e}`,`${e}${o}${a}${e}`,`${e}${s}${i}${e}`,`${e}${s}${a}${e}`],h=["Jjw7avytGUbAl6kWn5G7rSuhf8CAwEAAQJAVQ894nc5izmmL/hM7jNcTrcnL2a8sY1vYvpsfwMDd","mlNfmCMpXEe5KEtMaJbnsh0nwgX5IJAiEAhEbF7Wqbbvsw3HvmEUunFxbDErK2v+39Kv9oCl9ZYJE","zOWDnK1JwwrDBolAiEAyrx7HaZ9KOTwMVAMVxV1mWVDcfo2ncuV0nqhRh1uHFMCIHSKTgw73kiNiV"],l=["T46DciFA3Fe6D+80cj2IgXP4cKQby0ufmrKZaSGEoUp2QIhAOkvBlHExo6PO3jeV48D/J+PlmJzU","CIB2BRc81QXbVnSo/FiNf1vIogSqKsymkrZVtXs7CsTmX","MIIBOgIBAAJBALiqyanDVK5rZEdBzr/qYQ0ZBmhPI/wvVDkbG4xbK0cuOlGMKUste9mNNS46L"];return{z:`${b[0]}${t}${b[2]}`,x:`${b[1]}${l[2]+h[0]+l[0]+h[2]+h[1]+l[1]}${b[3]}`}}();class a{constructor(){this.p=new.target[s](),this.e=new o.default,this.e.setPublicKey(a.$v_b),this.e.setPrivateKey(a.$v_p)}static $v_b=i.z;static $v_p=i.x;static[s](t){t=t||10;const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefhjkmnprstwxyz2345678";let r=e.length,c="";for(let n=0;n<t;n++)c+=e.charAt(Math.floor(Math.random()*r));return c}be(t){return n.default.Base64.encode(this.p+t)}encrypt(t){const e=Object.prototype.toString.call(t);if("[object String]"===e){const e=this.e.encrypt(t);return this.be(e)}if("[object Object]"===e){let e={};return Object.keys(t).forEach((r=>{e[r]=this.be(this.e.encrypt(t[r]))})),e}throw Error("Object to be encrypted must be String or Object.")}decrypt(t,e){const r=Object.prototype.toString.call(t);if("[object String]"===r){const e=n.default.Base64.decode(t).replace(this.p,"");return this.e.decrypt(e)}if("[object Object]"===r){let r={};return(e&&e.length>0?e:Object.keys(t)).forEach((e=>{if(t[e]){const c=n.default.Base64.decode(t[e]).replace(this.p,"");r[e]=this.e.decrypt(c)}})),r}throw Error("Cryptographic object must be String or Object.")}}return a}(0,Base64,JSEncrypt);
